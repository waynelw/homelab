# Tekton Triggers 配置文件

---
# ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tekton-triggers-sa
  namespace: experiments
  labels:
    app: tekton-triggers-sa

---
# ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tekton-triggers-sa
  labels:
    app: tekton-triggers-sa
rules:
- apiGroups: ["tekton.dev"]
  resources: ["pipelineruns", "pipelineresources", "taskruns"]
  verbs: ["create", "get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]

---
# ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tekton-triggers-sa
  labels:
    app: tekton-triggers-sa
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-sa
subjects:
- kind: ServiceAccount
  name: tekton-triggers-sa
  namespace: experiments

---
# TriggerBinding
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: webhook-binding
  namespace: experiments
  labels:
    app: webhook-binding
spec:
  params:
  - name: git-revision
    value: $(body.head_commit.id)
  - name: git-repo-url
    value: $(body.repository.clone_url)
  - name: git-repo-name
    value: $(body.repository.name)
  - name: git-branch
    value: $(body.ref)
  - name: git-author
    value: $(body.head_commit.author.name)
  - name: git-message
    value: $(body.head_commit.message)

---
# TriggerTemplate
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: webhook-template
  namespace: experiments
  labels:
    app: webhook-template
spec:
  params:
  - name: git-revision
    description: "The git revision"
  - name: git-repo-url
    description: "The git repository URL"
  - name: git-repo-name
    description: "The git repository name"
  - name: git-branch
    description: "The git branch"
  - name: git-author
    description: "The git author"
  - name: git-message
    description: "The git commit message"
  resourcetemplates:
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      generateName: webhook-pipeline-run-
      labels:
        app: webhook-pipeline-run
        git-repo: $(tt.params.git-repo-name)
        git-branch: $(tt.params.git-branch)
    spec:
      pipelineRef:
        name: cicd-pipeline
      params:
      - name: app-name
        value: $(tt.params.git-repo-name)
      - name: environment
        value: "dev"
      - name: test-suite
        value: "unit"
      timeout: "30m"

---
# EventListener
apiVersion: triggers.tekton.dev/v1beta1
kind: EventListener
metadata:
  name: webhook-listener
  namespace: experiments
  labels:
    app: webhook-listener
spec:
  serviceAccountName: tekton-triggers-sa
  triggers:
  - name: webhook-trigger
    bindings:
    - ref: webhook-binding
    template:
      ref: webhook-template
    interceptors:
    - ref:
        name: "github"
      params:
      - name: "secretRef"
        value:
          secretName: github-secret
          secretKey: secret
      - name: "eventTypes"
        value: ["push", "pull_request"]

---
# GitHub Interceptor
apiVersion: triggers.tekton.dev/v1beta1
kind: ClusterInterceptor
metadata:
  name: github
  labels:
    app: github-interceptor
spec:
  clientConfig:
    service:
      name: tekton-triggers-github-interceptor
      namespace: tekton-pipelines
      path: "/"
      port: 443

---
# Secret for GitHub Webhook
apiVersion: v1
kind: Secret
metadata:
  name: github-secret
  namespace: experiments
  labels:
    app: github-secret
type: Opaque
data:
  secret: <base64-encoded-secret>

---
# 多环境 TriggerTemplate
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: multi-env-template
  namespace: experiments
  labels:
    app: multi-env-template
spec:
  params:
  - name: git-revision
    description: "The git revision"
  - name: git-repo-url
    description: "The git repository URL"
  - name: git-repo-name
    description: "The git repository name"
  - name: git-branch
    description: "The git branch"
  - name: environment
    description: "The target environment"
  resourcetemplates:
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      generateName: multi-env-pipeline-run-
      labels:
        app: multi-env-pipeline-run
        git-repo: $(tt.params.git-repo-name)
        git-branch: $(tt.params.git-branch)
        environment: $(tt.params.environment)
    spec:
      pipelineRef:
        name: cicd-pipeline
      params:
      - name: app-name
        value: $(tt.params.git-repo-name)
      - name: environment
        value: $(tt.params.environment)
      - name: test-suite
        value: "unit"
      timeout: "30m"

---
# 多环境 TriggerBinding
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: multi-env-binding
  namespace: experiments
  labels:
    app: multi-env-binding
spec:
  params:
  - name: git-revision
    value: $(body.head_commit.id)
  - name: git-repo-url
    value: $(body.repository.clone_url)
  - name: git-repo-name
    value: $(body.repository.name)
  - name: git-branch
    value: $(body.ref)
  - name: environment
    value: $(body.ref | replace("refs/heads/", ""))
